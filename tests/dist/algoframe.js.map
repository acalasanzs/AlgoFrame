{"version":3,"file":"algoframe.js","mappings":"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","sources":["webpack://AlgoFrame/webpack/universalModuleDefinition","webpack://AlgoFrame/./index.ts","webpack://AlgoFrame/./modules/timeline/index.ts","webpack://AlgoFrame/./modules/timeline/utils.ts","webpack://AlgoFrame/./test.ts","webpack://AlgoFrame/./utils.ts","webpack://AlgoFrame/webpack/bootstrap","webpack://AlgoFrame/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AlgoFrame\"] = factory();\n\telse\n\t\troot[\"AlgoFrame\"] = factory();\n})(self, () => {\nreturn ","import { Sequence } from './modules/timeline';\r\nimport {\r\n  Framer,\r\n  Controller,\r\n  Animator,\r\n  animationCallback,\r\n  Refresher,\r\n  Preset,\r\n  passPreset,\r\n} from './utils';\r\n\r\ntype timeReferences = {\r\n  duration?: number;\r\n  delay: number;\r\n};\r\ntype controls = {\r\n  FPS?: number;\r\n  loop?: boolean;\r\n};\r\ntype options = {\r\n  sequence: Sequence;\r\n  easing?: Preset;\r\n  controls?: controls;\r\n  timing: timeReferences;\r\n};\r\nexport class Animate {\r\n  // Frame properties\r\n  frame: Framer = new Framer();\r\n  control: Controller = new Controller();\r\n  progress: number = 0;\r\n  // Engine\r\n  engine: Animator = new Animator(this);\r\n\r\n  constructor(options: options) {\r\n    const { sequence, easing, controls, timing } = options;\r\n    this.engine.easing = passPreset(easing ? easing : 'linear');\r\n    this.frame.sequence = sequence;\r\n    if (controls?.FPS) this.frame.FPS = controls.FPS; // also implicitily declares Framer._precision\r\n    if (controls?.loop) this.control.loop = controls.loop;\r\n    this.frame.start.time = timing.delay;\r\n    this.frame.duration = timing.duration || sequence.duration;\r\n  }\r\n  public finally(callback: () => void) {\r\n    this.control.finally = callback;\r\n    return this;\r\n  }\r\n  public break() {\r\n    this.control.stop = false;\r\n    return this;\r\n  }\r\n  public precision(value: number) {\r\n    this.frame.precision = value;\r\n    return this;\r\n  }\r\n  public run(callback?: animationCallback) {\r\n    let condition: boolean, seg: number;\r\n    if (callback) {\r\n      this.control.callback = callback;\r\n    }\r\n    if (!this.control.callback)\r\n      throw new Error('Main callback is required for the animation');\r\n    this.frame.last.time = new Refresher();\r\n    this.frame.last.frameRate = this.frame.last.frameRate\r\n      ? this.frame.last.frameRate\r\n      : new Refresher(this.frame.precision);\r\n\r\n    function refresh(this: Animate, timestamp: number): void {\r\n      if (this.control.completed) {\r\n        this.frame.frame = -1;\r\n        this.frame.start.animationTime = timestamp;\r\n        this.control.completed = !this.control.completed;\r\n      }\r\n      if (this.frame._FPS) {\r\n        seg = Math.floor(\r\n          (timestamp - this.frame.start.time) / this.frame.delay\r\n        );\r\n        condition = Boolean(seg > this.frame.count);\r\n      } else {\r\n        condition = true;\r\n      }\r\n      this.frame.last.time.refresh(timestamp);\r\n    }\r\n\r\n    function animate(this: Animate, timestamp: number) {\r\n      refresh.call(this, timestamp);\r\n      let runtime: number, relativeProgress: number, easedProgress: number;\r\n      if (this.frame.start.animationTime) {\r\n        runtime = timestamp - this.frame.start.animationTime;\r\n        relativeProgress = runtime / this.frame.duration;\r\n        easedProgress = this.engine.easing(relativeProgress);\r\n        this.progress = easedProgress;\r\n        this.engine.engine({\r\n          relativeProgress,\r\n          easedProgress,\r\n          runtime,\r\n          timestamp,\r\n          seg,\r\n          condition,\r\n          requestAnimation: animate,\r\n        });\r\n      } else if (this.frame.start.time > 0) {\r\n        this.frame.start.animationTime = timestamp;\r\n\r\n        let last: number = 0;\r\n        if (typeof this.frame.last.time.last === 'number') {\r\n          last = this.frame.last.time.last;\r\n        }\r\n        this.frame.start.time =\r\n          this.frame.start.time - last < last * 0.7\r\n            ? 0\r\n            : this.frame.start.time - last;\r\n        requestAnimationFrame(animate.bind(this));\r\n        return;\r\n      }\r\n    }\r\n    requestAnimationFrame(animate.bind(this));\r\n    return this;\r\n  }\r\n}\r\nclass AlgoFrame {\r\n  constructor() {}\r\n}\r\n","import { Preset, passPreset } from '../../utils';\r\nimport {\r\n  _keyframe,\r\n  IObjectKeyframe,\r\n  nestedKeyframe,\r\n  valueKeyframe,\r\n  __objectKeyframe,\r\n  __valueKeyframe,\r\n  ISimpleKeyframe,\r\n  isComplex,\r\n  isSimple,\r\n  timeIntervals,\r\n  replicate,\r\n  IBaseKeyframe,\r\n  safePad,\r\n  safeShift,\r\n  normalKeyframes,\r\n  // BaseKeyframe,\r\n} from './utils';\r\nexport * from './utils';\r\n// Classes\r\n\r\nexport abstract class KeyChanger<Keyframe extends _keyframe> {\r\n  public duration: number;\r\n  run: Keyframe[];\r\n  next: Keyframe | null = null;\r\n  current: Keyframe | null = null;\r\n  public adaptative: boolean = false;\r\n  easing: (t: number) => number;\r\n  object = Symbol();\r\n  changer!: () => any;\r\n\r\n  constructor(\r\n    duration: number | false,\r\n    easing: Preset = 'linear',\r\n    public keyframes: Keyframe[]\r\n  ) {\r\n    this.duration =\r\n      typeof duration === 'number'\r\n        ? Math.floor(duration)\r\n        : (_ => {\r\n            this.adaptative = true;\r\n            return 1;\r\n          })();\r\n    this.run = [];\r\n    this.easing = passPreset(easing);\r\n    this.init(keyframes);\r\n  }\r\n  protected nextTime(): void {\r\n    if (!this.run.length) {\r\n      this.next = null;\r\n      return;\r\n    }\r\n    if (this.run.length > 1) {\r\n      this.current = this.run.reduce((previousValue, currentValue) => {\r\n        return currentValue!.time(this.duration) <\r\n          previousValue!.time(this.duration)\r\n          ? currentValue\r\n          : previousValue;\r\n      });\r\n      this.next =\r\n        this.run\r\n          .filter(\r\n            v => v!.time(this.duration) !== this.current!.time(this.duration)\r\n          )\r\n          .reduce((previousValue, currentValue) =>\r\n            currentValue!.time(this.duration) <\r\n            previousValue!.time(this.duration)\r\n              ? currentValue\r\n              : previousValue\r\n          ) || this.current;\r\n      // console.log(this.current?.time(1), this.next.time(1), this.run);\r\n    } else {\r\n      this.restart();\r\n    }\r\n    this.changer?.();\r\n    this.run.shift();\r\n  }\r\n  public abstract reset(): void;\r\n  public restart() {\r\n    while (this.run.length) this.run.pop();\r\n    this.reset();\r\n  }\r\n  protected abstract init(keyframes: Keyframe[]): void;\r\n  // This is called when in this.test(), this.current is of type nestedKeyframe, so treat de return as a nested timeline call.\r\n  protected currentAsSequence(\r\n    object: IObjectKeyframe,\r\n    progress: number,\r\n    end: number\r\n  ): number | undefined {\r\n    // console.log((progress - object.time(1)) / (end - object.time(1)));\r\n    const rProgress = (progress - object.time(1)) / (end - object.time(1));\r\n    let res!: number;\r\n    if (rProgress <= 1) {\r\n      // console.log(object.obj);\r\n      res = object.obj.test(rProgress, undefined, true) as number;\r\n      return res;\r\n    }\r\n  }\r\n  static lerp(x: number, y: number, a: number) {\r\n    const lerp = x * (1 - a) + y * a;\r\n    return lerp;\r\n  }\r\n  public test(\r\n    progress: number,\r\n    miliseconds: boolean = false,\r\n    runAdaptative: boolean = false,\r\n    nextValue?: ISimpleKeyframe\r\n  ): number | undefined {\r\n    if (progress < 0) debugger;\r\n    progress = progress <= 1 ? progress : 1;\r\n    let next = nextValue ? nextValue : this.next;\r\n    if (this.adaptative && !runAdaptative) {\r\n      throw new Error(\r\n        'Adaptitive timed sequences cannot be played in first place'\r\n      );\r\n    }\r\n    if (miliseconds && !runAdaptative) progress = progress * this.duration;\r\n    else if (miliseconds)\r\n      throw new Error('miliseconds mode not allowe when adaptative');\r\n    if (next && this.current) {\r\n      while (next!.time(1) <= progress && !(next!.time(1) === 1)) {\r\n        this.nextTime(); //bug-proof\r\n        next = this.next;\r\n      }\r\n      if (isSimple(next) && isSimple(this.current)) {\r\n        progress = Math.min(\r\n          this.easing(progress),\r\n          miliseconds ? this.duration : 1\r\n        );\r\n        const a = next.time(1) - this.current.time(1);\r\n        const trace = progress / a;\r\n        const kProgress =\r\n          progress < progress - a\r\n            ? trace\r\n            : (progress - this.current.time(1)) / a;\r\n        // console.log(String([this.current.time(1), next.time(1)]));\r\n        const lerp = KeyChanger.lerp(\r\n          this.current.value,\r\n          next.value,\r\n          next.hold ? 0 : kProgress\r\n        );\r\n        // debugger;\r\n        // console.log(this.current, next);\r\n        return lerp;\r\n      } else if (isComplex(next) && isSimple(this.current)) {\r\n        // return (this.current as nestedKeyframe).obj.test(progress - this.current.time);\r\n        const nextValueFromObj = new valueKeyframe(\r\n          this.getAbsoluteStartValue(next.obj as Sequence),\r\n          next.time(1),\r\n          'ratio'\r\n        );\r\n        nextValueFromObj.duration = this.duration;\r\n        return this.test(\r\n          progress,\r\n          undefined,\r\n          undefined,\r\n          nextValueFromObj\r\n          // this.next.obj.run[0].value\r\n        );\r\n      } else if (isComplex(this.current) && isComplex(next)) {\r\n        // this.nextTime();\r\n        // debugger;\r\n        const res = this.currentAsSequence(\r\n          this.current,\r\n          progress,\r\n          this.next ? this.next.time(1) : 1\r\n        );\r\n        return res;\r\n      } else if (isComplex(this.current) && (isSimple(next) || !next)) {\r\n        // console.log(progress.toFixed(2));\r\n        return this.currentAsSequence(\r\n          this.current,\r\n          progress,\r\n          next ? next.time(1) : 1\r\n        );\r\n      }\r\n    }\r\n  }\r\n  getAbsoluteStartValue(sequence: Sequence): number {\r\n    let last = sequence.current;\r\n    while (last instanceof nestedKeyframe) {\r\n      last = sequence.current;\r\n    }\r\n    return last!.value;\r\n  }\r\n  getAbsoluteEndKeyframe(sequence: Sequence): valueKeyframe {\r\n    let last = sequence.run[sequence.run.length - 1];\r\n    while (last instanceof nestedKeyframe) {\r\n      last = sequence.run[sequence.run.length - 1];\r\n    }\r\n    return last;\r\n  }\r\n}\r\n\r\n// TODO:\r\n// 1. Nested Sequence instances DONE\r\n//    Adaptative Sequence duration DONE\r\n// P.D.: That's not the as AlgoFrame.timeline, which each timing 'sequence' has its own function rather a numeric value in a Sequence\r\nexport class Sequence extends KeyChanger<normalKeyframes> {\r\n  type: 'nested' | 'simple' = 'simple';\r\n  taken: number[] = [];\r\n  constructor(\r\n    duration: number | false,\r\n    public keyframes: (valueKeyframe | nestedKeyframe)[],\r\n    easing: Preset = 'linear',\r\n    public callback: Function | null = null\r\n  ) {\r\n    super(duration, easing, keyframes);\r\n    // Pushes and Checks if all events are of type nestedKeyframe or _keyframe\r\n  }\r\n  protected init(keyframes: typeof this.keyframes) {\r\n    // if (window['debug']) debugger;\r\n    this.type = 'simple';\r\n    keyframes.forEach(k => {\r\n      if (k.type == 'ratio') {\r\n        k.timing = k.timing * this.duration;\r\n        k.type = 'miliseconds';\r\n      }\r\n    });\r\n    this.taken = [];\r\n    const zero = keyframes[0];\r\n    const final = keyframes[keyframes.length - 1];\r\n    zero.duration = this.duration;\r\n    final.duration = this.duration;\r\n    if (zero.time(1) > 0) {\r\n      // this.taken.push(0);\r\n      const first =\r\n        zero instanceof valueKeyframe\r\n          ? new valueKeyframe(zero.value, 0)\r\n          : new nestedKeyframe(zero.obj, 0);\r\n      first.duration = this.duration;\r\n      this.keyframes.unshift(first);\r\n      this.run.push(first);\r\n    }\r\n    if (final.time(1) < 1) {\r\n      if (final instanceof nestedKeyframe)\r\n        throw new Error(\r\n          \"Cannot set last keyframe as nested sequence, it's impossible\"\r\n        );\r\n      const last = new valueKeyframe(final.value, 1, 'ratio');\r\n      last.duration = this.duration;\r\n      this.keyframes.push(last);\r\n      this.run.push(last);\r\n    }\r\n\r\n    this.keyframes.forEach((k: any, i) => {\r\n      k.duration = this.duration;\r\n      k = k;\r\n      const timing = k.time(this.duration);\r\n      if (timing > this.duration) throw new Error('Keyframe timing overflow');\r\n      if (this.taken.includes(timing))\r\n        throw new Error('It must not have repeated times');\r\n      this.taken.push(k.time(1));\r\n      if (k instanceof nestedKeyframe) this.type = 'nested';\r\n      this.run.push(k);\r\n    });\r\n    if (!this.type) throw new Error('No events/keyframes provided');\r\n\r\n    if (this.keyframes[0] instanceof valueKeyframe) {\r\n    }\r\n    try {\r\n      this.nextTime();\r\n    } catch {\r\n      throw new Error(\r\n        'Identical time signatures on keyframes are not allowed on a single animation channel'\r\n      );\r\n    }\r\n  }\r\n  static passKeyframe(k: any | nestedKeyframe | valueKeyframe) {\r\n    if (k instanceof nestedKeyframe || k instanceof valueKeyframe) return k;\r\n    return this.is_value(k)\r\n      ? new valueKeyframe(k.value, k.timing, k.type)\r\n      : new nestedKeyframe(k.obj, k.timing, k.type);\r\n  }\r\n  static is_value(object: any): object is __valueKeyframe {\r\n    return 'val' in object;\r\n  }\r\n  public addKeyframes(\r\n    /**\r\n     * Adds a new keyframe to the entire set,\r\n     *\r\n     * @remarks\r\n     * To apply new keyframes, must do .reset() before\r\n     *\r\n     * @param keyframe - A valid AlgoFrame's keyframe object\r\n     */\r\n    method: 'push' | 'unshift' = 'push',\r\n    ...keyframes: normalKeyframes[]\r\n  ): Sequence {\r\n    keyframes.forEach(keyframe => {\r\n      const nkeyframe = Sequence.passKeyframe(keyframe);\r\n      this.keyframes[method as 'push' | 'unshift'](nkeyframe);\r\n    });\r\n    const { max: duration } = timeIntervals(this.keyframes);\r\n    this.keyframes.forEach(k => {\r\n      if (k.type == 'ratio') {\r\n        k.timing = k.timing * duration;\r\n        k.type = 'miliseconds';\r\n      }\r\n    });\r\n    this.duration = duration;\r\n    this.init(this.keyframes);\r\n    return this;\r\n  }\r\n  public extendToSequence(seq: Sequence, safe: safePad | safeShift) {\r\n    if (seq.object === this.object)\r\n      throw new Error('Cannot reextend to my own self');\r\n    let safePad = (safe as any).value * 2;\r\n    safePad = safePad ? safePad : 0;\r\n    if (safePad) {\r\n      seq.duration += 1;\r\n    }\r\n    seq.keyframes.forEach((k, i) => {\r\n      const safing = i < seq.keyframes.length - 1 ? 1 : 0;\r\n      const safeOffset = safePad ? safing : 0;\r\n      k.timing =\r\n        k.timing +\r\n        (k.duration + this.duration + safeOffset * safePad) *\r\n          (k.duration / (this.duration + k.duration));\r\n      k.duration += this.duration;\r\n      if (!safing && safe) {\r\n        k.timing += 1;\r\n      }\r\n    });\r\n    if (safe && !safePad) {\r\n      // safeShift\r\n      this.keyframes.pop();\r\n    }\r\n    this.keyframes.forEach(k => {\r\n      k.duration += this.duration;\r\n    });\r\n    this.keyframes.forEach(k => {\r\n      console.log(k.duration);\r\n    });\r\n    /*     const display = (seq: Sequence) =>\r\n      seq.keyframes.map(k => [k.time(k.duration), k.duration]);\r\n    console.log(display(seq), display(this)); */\r\n    this.addKeyframes('push', ...seq.keyframes);\r\n    return this;\r\n  }\r\n  public reset(): void {\r\n    this.keyframes.forEach(k => this.run.push(k));\r\n  }\r\n  public clone(): Sequence {\r\n    const keyframes = this.keyframes.map(k => {\r\n      if (isComplex(k)) {\r\n        const copy = replicate(\r\n          k\r\n        ) as Keyframe as IObjectKeyframe as nestedKeyframe;\r\n        copy.obj = copy.obj.clone();\r\n        return copy;\r\n      }\r\n      return replicate(k) as Keyframe;\r\n    });\r\n    let copy: Sequence = new Sequence(\r\n      this.duration,\r\n      keyframes as any,\r\n      this.easing,\r\n      this.callback\r\n    );\r\n\r\n    return copy;\r\n  }\r\n  // public reset(): void in abstract parent class\r\n}\r\n","import { KeyChanger, Sequence } from '.';\r\nexport type safePad = {\r\n  mode: 'pad';\r\n  value: number;\r\n};\r\nexport type safeShift = {\r\n  mode: 'shift';\r\n};\r\n\r\nexport function timeIntervals(blocks: _keyframe[]) {\r\n  let max = 1;\r\n  let min = 0;\r\n  const intervals = blocks.map((block, i) => {\r\n    let kDuration = 0;\r\n    function tstart(block: _keyframe) {\r\n      return block.start ? block.start : 0 + block.time();\r\n    }\r\n    const time = tstart(block);\r\n    if (i < blocks.length - 1) {\r\n      kDuration = tstart(blocks[i + 1]) - time - 1;\r\n      if (kDuration < block.delay) {\r\n        throw new Error(\r\n          'Sequences/_keyframe(s) overlapping on the same channel!'\r\n        );\r\n      }\r\n    }\r\n    const end = block.start ? block.start : 0 + time + kDuration;\r\n    max = max < end ? end : max;\r\n    min = min > time ? time : min;\r\n    return [time, end];\r\n  });\r\n  return { max, min };\r\n}\r\nexport function replicate(obj: object): object {\r\n  return Object.assign(Object.create(Object.getPrototypeOf(obj)), obj);\r\n}\r\nexport function ratioAndMilisecons(\r\n  ratio: number,\r\n  miliseconds: number,\r\n  duration: number\r\n): number {\r\n  /**\r\n   * @param ratio - The ratio of the basic measure, between 0 and 1\r\n   * @param miliseconds - Miliseconds to delay on the ratio\r\n   * @param duration - Total duration of the sequence\r\n   * @returns The arithmetic sum with all parameters in miliseconds\r\n   */\r\n  return ratio * duration + miliseconds;\r\n}\r\nexport interface IBaseKeyframe {\r\n  time(duration: number): number;\r\n}\r\n\r\nexport interface IObjectKeyframe extends IBaseKeyframe {\r\n  [x: string]: any;\r\n  obj: KeyChanger<any>;\r\n}\r\nexport interface ISimpleKeyframe extends IBaseKeyframe {\r\n  [x: string]: any;\r\n  value: number;\r\n}\r\n\r\nexport class _keyframe implements IBaseKeyframe {\r\n  static instances = 0;\r\n  readonly id: number;\r\n  public duration!: number;\r\n  constructor(\r\n    public timing: number,\r\n    public type: 'ratio' | 'miliseconds' = 'ratio',\r\n    public delay: number = 0,\r\n    public hold: boolean = false,\r\n    public start: number = 0\r\n  ) {\r\n    if (start < 0) {\r\n      throw new RangeError('Negative start times are not implemented yet');\r\n    }\r\n    this.id = _keyframe.instances++;\r\n    if (this.type === 'miliseconds') {\r\n      this.duration = 0;\r\n    }\r\n  }\r\n  public time(duration: number = this.duration): number {\r\n    let timing = this.timing;\r\n    if (this.delay) {\r\n      if (typeof this.duration !== 'number')\r\n        throw new Error('Keyframe with delay has to have duration setted');\r\n      timing =\r\n        this.type === 'ratio'\r\n          ? ratioAndMilisecons(timing, this.delay, this.duration)\r\n          : timing + this.delay!;\r\n    }\r\n    if (typeof this.duration !== 'number')\r\n      throw new Error(\r\n        'Need to set this.duration to each keyframe in the keyframes manager'\r\n      );\r\n    // if (this.type === 'miliseconds' && !this.duration) console.log(this);\r\n    return this.type === 'miliseconds'\r\n      ? timing / (this.duration === 0 ? 1 : this.duration / duration)\r\n      : duration * timing;\r\n  }\r\n}\r\n\r\nexport class valueKeyframe extends _keyframe implements ISimpleKeyframe {\r\n  constructor(\r\n    public value: number,\r\n    timing: number,\r\n    type: 'ratio' | 'miliseconds' = 'miliseconds',\r\n    delay?: number,\r\n    hold: boolean = false\r\n  ) {\r\n    super(timing, type, delay, hold);\r\n  }\r\n}\r\n// unknown now but maybe a special kind of AlgoFrame + Timeline for nested sequencees! And must fit in the timeline keyframe\r\nexport class nestedKeyframe extends _keyframe implements IObjectKeyframe {\r\n  constructor(\r\n    public obj: Sequence,\r\n    timing: number,\r\n    type: 'ratio' | 'miliseconds' = 'miliseconds',\r\n    delay?: number\r\n  ) {\r\n    super(timing, type, delay);\r\n  }\r\n}\r\nexport type normalKeyframes = valueKeyframe | nestedKeyframe;\r\n// Enumerables\r\n// export type SimpleKeyframes = BaseKeyframe[];\r\n// export type ComplexKeyframes = ObjectKeyframe[];\r\n\r\nexport function isSimple(object: any): object is ISimpleKeyframe {\r\n  return 'value' in object && object instanceof _keyframe;\r\n}\r\nexport function isComplex(object: any): object is IObjectKeyframe {\r\n  return 'obj' in object && object instanceof _keyframe;\r\n}\r\n\r\n// Anonymous Interfaces\r\nexport type __objectKeyframe = {\r\n  obj: Sequence;\r\n  timing: number;\r\n  type: 'ratio' | 'miliseconds';\r\n  delay?: number;\r\n  duration?: number;\r\n};\r\nexport type __valueKeyframe = {\r\n  value: number;\r\n  timing: number;\r\n  type: 'ratio' | 'miliseconds';\r\n  delay?: number;\r\n  duration?: number;\r\n};\r\n","import { Animate } from '.';\r\nconst global = {\r\n  delay: 300,\r\n};\r\nimport {\r\n  _keyframe,\r\n  nestedKeyframe,\r\n  Sequence,\r\n  valueKeyframe,\r\n} from './modules/timeline';\r\nimport { ChannelBlock } from './modules/timeline/channels';\r\nconst basic = new Sequence(false, [\r\n  new valueKeyframe(2222, 0, 'ratio'),\r\n  new valueKeyframe(4444, 0.5, 'ratio'),\r\n  new valueKeyframe(6666, 1, 'ratio'),\r\n]);\r\nconst first = new Sequence(false, [\r\n  new nestedKeyframe(basic.clone(), 0, 'ratio'),\r\n  new nestedKeyframe(basic.clone(), 0.5, 'ratio'),\r\n  new nestedKeyframe(basic.clone(), 1, 'ratio'),\r\n]);\r\nconst second = new Sequence(1000, [\r\n  new nestedKeyframe(first.clone(), 0, 'ratio'),\r\n  new nestedKeyframe(first.clone(), 0.5, 'ratio'),\r\n  new nestedKeyframe(first.clone(), 1, 'ratio'),\r\n]);\r\n\r\nfunction animate() {\r\n  let number = 0;\r\n  return function startAnimation(sequence: Sequence): void {\r\n    number++;\r\n    const animation = new Animate({\r\n      sequence,\r\n      easing: 'linear',\r\n      timing: {\r\n        delay: global.delay,\r\n      },\r\n    });\r\n    animation.run(({ value, ...other }) => {\r\n      console.log('Animation ' + number);\r\n      console.log(value, [...Object.values(other)]);\r\n    });\r\n  };\r\n}\r\nconst start = animate();\r\n// console.log(new ChannelBlock(second, 100).end());\r\nconsole.log(second, second.duration, 'duration');\r\n\r\nconst custom = 3 || 12;\r\nlet time = 2;\r\nconst getNewK = ({ duration }: { duration: number }) => {\r\n  time++;\r\n  return new valueKeyframe(\r\n    2222 * (((time % 3) / 3) * 3 + 1),\r\n    duration + 1,\r\n    'miliseconds',\r\n    200\r\n  );\r\n};\r\nfor (let i = 0; i < custom; i++) {\r\n  second.addKeyframes('push', getNewK(second));\r\n}\r\n\r\n// second.reset();\r\nconsole.log(\r\n  second.duration,\r\n  'duration',\r\n  second.keyframes.map(k => [k.time(1), k.duration])\r\n);\r\nconsole.log(\r\n  second\r\n    .addKeyframes('push', getNewK({ duration: second.duration + 200 }))\r\n    .keyframes.map(k => [k.time(1), k.duration])\r\n);\r\n\r\nconsole.error('FROM HERE');\r\n\r\n// keyframes deep clone DONE\r\nconst display = (seq: Sequence) =>\r\n  seq.keyframes.map(k => [k.time(k.duration), k.duration, k.value]);\r\n\r\n// second.extendToSequence(second.clone(), { mode: 'shift' });\r\nconsole.log(display(second));\r\n// second.restart();\r\nstart(second);\r\n/* let val = 0;\r\nwhile (++val < 1000) {\r\n  console.log(second.test(val / 1000));\r\n} */\r\n","import { Sequence } from './modules/timeline';\r\n\r\nexport class EasingFunctions {\r\n  // no easing; no acceleration\r\n  static linear: (t: number) => number = t => t;\r\n  // accelerating from zero velocity\r\n  static easeInQuad: (t: number) => number = t => t * t;\r\n  // decelerating to zero velocity\r\n  static easeOutQuad: (t: number) => number = t => t * (2 - t);\r\n  // acceleration until halfway; then deceleration\r\n  static easeInOutQuad: (t: number) => number = t =>\r\n    t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n  // accelerating from zero velocity\r\n  static easeInCubic: (t: number) => number = t => t * t * t;\r\n  // decelerating to zero velocity\r\n  static easeOutCubic: (t: number) => number = t => --t * t * t + 1;\r\n  // acceleration until halfway; then deceleration\r\n  static easeInOutCubic: (t: number) => number = t =>\r\n    t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n  // accelerating from zero velocity\r\n  static easeInQuart: (t: number) => number = t => t * t * t * t;\r\n  // decelerating to zero velocity\r\n  static easeOutQuart: (t: number) => number = t => 1 - --t * t * t * t;\r\n  // acceleration until halfway; then deceleration\r\n  static easeInOutQuart: (t: number) => number = t =>\r\n    t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\r\n  // accelerating from zero velocity\r\n  static easeInQuint: (t: number) => number = t => t * t * t * t * t;\r\n  // decelerating to zero velocity\r\n  static easeOutQuint: (t: number) => number = t => 1 + --t * t * t * t * t;\r\n  // acceleration until halfway; then deceleration\r\n  static easeInOutQuint: (t: number) => number = t =>\r\n    t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\r\n}\r\nexport type Preset = string | ((x: number) => number);\r\nexport function passPreset(preset: Preset) {\r\n  if (typeof preset !== 'function') {\r\n    return EasingFunctions[\r\n      preset as keyof typeof EasingFunctions\r\n    ] as Preset as (t: number) => number;\r\n  } else {\r\n    return preset as (t: number) => number;\r\n  }\r\n}\r\nexport type animationCallback = (frame: Framer) => void;\r\nexport class Framer {\r\n  _FPS: number | null = null;\r\n  rate: number = 0;\r\n  _delay!: number;\r\n  count: number = -1; // this.frame\r\n  frame: number = -1; // this.animationFrame\r\n  _precision: number = 30;\r\n  last!: {\r\n    time: Refresher;\r\n    frameRate: Refresher;\r\n  };\r\n  value!: number;\r\n  sequence!: Sequence;\r\n  start: Initiator = new Initiator();\r\n  duration!: number;\r\n  constructor() {}\r\n  set precision(value: number) {\r\n    value = Math.abs(value);\r\n    this._precision = value;\r\n  }\r\n  get precision(): number {\r\n    return this._precision || (this._FPS as number);\r\n  }\r\n  set FPS(value: number | null) {\r\n    try {\r\n      value = Math.abs(value as number);\r\n      this._FPS = value;\r\n    } catch {}\r\n  }\r\n  get FPS(): number | null {\r\n    return this._FPS ? 1000 / this._FPS : null;\r\n  }\r\n  get delay() {\r\n    if (!this._FPS) throw new Error('Not initialized');\r\n    return 1000 / this._FPS;\r\n  }\r\n}\r\nexport class Initiator {\r\n  // Refers to this.start___ whatever\r\n  time: number = 0;\r\n  afterWait: number | null = null;\r\n  animationTime: number | null = null;\r\n}\r\nexport class Controller {\r\n  stop: boolean = false;\r\n  _start!: (value?: () => void | PromiseLike<() => void>) => void;\r\n  __start: Promise<unknown> = new Promise(resolve => (this._start = resolve));\r\n  _completed!: boolean;\r\n  get completed(): boolean {\r\n    return this._completed || !this.stop;\r\n  }\r\n  set completed(value: boolean) {\r\n    this._completed = value;\r\n  }\r\n  finally!: () => void; // this.next\r\n  loop: boolean = false;\r\n  callback!: animationCallback;\r\n}\r\nexport class Refresher {\r\n  history: number[];\r\n  last: number | 'Calculating...';\r\n  currenttime: number;\r\n  constructor(precision: number = 1) {\r\n    this.history = new Array(precision).fill(0);\r\n    this.last = 0;\r\n    this.currenttime = 0;\r\n  }\r\n  refresh(timestamp: number) {\r\n    this.history.unshift(0);\r\n    this.history.pop();\r\n    this.history[0] = timestamp - this.currenttime;\r\n    this.last = this.history.includes(0)\r\n      ? 'Calculating...'\r\n      : this.history.reduce((prev, curr) => prev + curr) / this.history.length;\r\n    this.currenttime = timestamp;\r\n  }\r\n}\r\nexport type EngineTypes = {\r\n  runtime: number;\r\n  relativeProgress: number;\r\n  easedProgress: number;\r\n  condition: boolean;\r\n  timestamp: number;\r\n  seg: number;\r\n  requestAnimation: Function;\r\n};\r\nexport class Animator {\r\n  // And add Spring and other physics\r\n  easing!: (x: number) => number;\r\n  constructor(public origin: any) {}\r\n  engine(parameters: EngineTypes) {\r\n    let sent: boolean = false;\r\n    function send() {\r\n      sent = true;\r\n      self.frame.value = self.frame.sequence.test(\r\n        Math.min(parameters.easedProgress, 1)\r\n      ) as number;\r\n      self.control.callback(self.frame);\r\n    }\r\n    let self = this.origin;\r\n    if (parameters.condition) {\r\n      self.frame.count = parameters.seg;\r\n      self.frame.start.animationTime =\r\n        typeof self.frame.start.animationTime === 'number'\r\n          ? self.frame.start.animationTime + 1\r\n          : self.frame.start.animationTime;\r\n      self.frame.last.frameRate.refresh(parameters.timestamp);\r\n      send();\r\n    }\r\n    if (!self.stop) {\r\n      if (parameters.runtime < self.duration) {\r\n        requestAnimationFrame(parameters.requestAnimation.bind(self));\r\n      } else if (parameters.runtime + self.last.last > self.duration) {\r\n        self.animationFrame++;\r\n\r\n        send();\r\n        self.control.completed = true;\r\n        // debugger;\r\n        if (self.loop)\r\n          requestAnimationFrame(parameters.requestAnimation.bind(self));\r\n        self.control.finally?.();\r\n      } else if (!self.done) {\r\n        self.control.completed = true;\r\n        if (self.loop)\r\n          requestAnimationFrame(parameters.requestAnimation.bind(self));\r\n        self.control.finally?.();\r\n      }\r\n    }\r\n    if (self.animationFrame === 0) self.__start();\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(503);\n"],"names":["root","factory","exports","module","define","amd","self","constructor","options","frame","Framer","control","Controller","progress","engine","Animator","this","sequence","easing","controls","timing","passPreset","FPS","loop","start","time","delay","duration","finally","callback","break","stop","precision","value","run","condition","seg","Error","refresh","timestamp","completed","animationTime","_FPS","Math","floor","Boolean","count","last","Refresher","frameRate","requestAnimationFrame","animate","runtime","relativeProgress","easedProgress","call","requestAnimation","bind","KeyChanger","keyframes","next","current","adaptative","object","Symbol","_","init","nextTime","length","reduce","previousValue","currentValue","filter","v","restart","changer","shift","pop","reset","currentAsSequence","end","rProgress","res","obj","test","undefined","static","x","y","a","miliseconds","runAdaptative","nextValue","isSimple","min","kProgress","lerp","hold","isComplex","nextValueFromObj","valueKeyframe","getAbsoluteStartValue","nestedKeyframe","getAbsoluteEndKeyframe","Sequence","super","type","taken","forEach","k","zero","final","first","unshift","push","i","includes","is_value","addKeyframes","method","keyframe","nkeyframe","passKeyframe","max","timeIntervals","extendToSequence","seq","safe","safePad","safing","safeOffset","console","log","clone","map","copy","replicate","ratioAndMilisecons","ratio","blocks","block","kDuration","tstart","Object","assign","create","getPrototypeOf","_keyframe","RangeError","id","instances","basic","second","number","Animate","other","values","getNewK","error","EasingFunctions","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","preset","rate","_precision","Initiator","abs","afterWait","__start","Promise","resolve","_start","_completed","history","Array","fill","currenttime","prev","curr","origin","parameters","sent","send","animationFrame","done","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}