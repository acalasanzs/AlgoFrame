{"version":3,"file":"algoframe.js","mappings":"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","sources":["webpack://AlgoFrame/webpack/universalModuleDefinition","webpack://AlgoFrame/./modules/timeline/index.ts","webpack://AlgoFrame/./modules/timeline/utils.ts","webpack://AlgoFrame/./test.ts","webpack://AlgoFrame/./utils.ts","webpack://AlgoFrame/./algoframe/utils.js","webpack://AlgoFrame/./algoframe/index.js","webpack://AlgoFrame/webpack/bootstrap","webpack://AlgoFrame/webpack/runtime/define property getters","webpack://AlgoFrame/webpack/runtime/hasOwnProperty shorthand","webpack://AlgoFrame/webpack/runtime/make namespace object","webpack://AlgoFrame/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AlgoFrame\"] = factory();\n\telse\n\t\troot[\"AlgoFrame\"] = factory();\n})(self, () => {\nreturn ","import { Preset, passPreset } from '../../utils';\r\nimport {\r\n  _keyframe,\r\n  ObjectKeyframe,\r\n  nestedKeyframe,\r\n  valueKeyframe,\r\n  __objectKeyframe,\r\n  __valueKeyframe,\r\n  SimpleKeyframe,\r\n  isComplex,\r\n  isSimple,\r\n  timeIntervals,\r\n} from './utils';\r\nexport * from './utils';\r\n// Classes\r\n\r\nexport abstract class KeyChanger<Keyframe extends _keyframe> {\r\n  public duration: number;\r\n  run: Keyframe[];\r\n  next: Keyframe | null = null;\r\n  current: Keyframe | null = null;\r\n  public adaptative: boolean = false;\r\n  keyframes?: Keyframe[];\r\n  easing: (t: number) => number;\r\n\r\n  constructor(duration: number | false, easing: Preset = 'linear') {\r\n    this.duration =\r\n      typeof duration === 'number'\r\n        ? Math.floor(duration)\r\n        : (_ => {\r\n            this.adaptative = true;\r\n            return 1;\r\n          })();\r\n    this.run = [];\r\n    this.easing = passPreset(easing);\r\n  }\r\n  protected nextTime(): void {\r\n    if (!this.run.length) {\r\n      this.next = null;\r\n      return;\r\n    }\r\n    if (this.run.length > 1) {\r\n      this.current = this.run.reduce((previousValue, currentValue) => {\r\n        return currentValue!.time(this.duration) <\r\n          previousValue!.time(this.duration)\r\n          ? currentValue\r\n          : previousValue;\r\n      });\r\n      this.next =\r\n        this.run\r\n          .filter(\r\n            v => v!.time(this.duration) !== this.current!.time(this.duration)\r\n          )\r\n          .reduce((previousValue, currentValue) =>\r\n            currentValue!.time(this.duration) <\r\n            previousValue!.time(this.duration)\r\n              ? currentValue\r\n              : previousValue\r\n          ) || this.current;\r\n      // console.log(this.current?.time(1), this.next.time(1), this.run);\r\n    } else {\r\n      this.restart();\r\n    }\r\n    this.run.shift();\r\n  }\r\n  protected abstract reset(): void;\r\n  protected abstract init(keyframes: Keyframe[]): void;\r\n  public restart() {\r\n    while (this.run.length) this.run.pop();\r\n    this.reset();\r\n    this.init(this.run);\r\n  }\r\n  // This is called when in this.test(), this.current is of type nestedKeyframe, so treat de return as a nested timeline call.\r\n  protected currentAsSequence(\r\n    object: ObjectKeyframe,\r\n    progress: number,\r\n    end: number\r\n  ): number | undefined {\r\n    // console.log((progress - object.time(1)) / (end - object.time(1)));\r\n    const rProgress = (progress - object.time(1)) / (end - object.time(1));\r\n    let res!: number;\r\n    if (rProgress <= 1) {\r\n      // console.log(object.obj);\r\n      res = object.obj.test(rProgress, undefined, true) as number;\r\n      return res;\r\n    }\r\n  }\r\n  static lerp(x: number, y: number, a: number) {\r\n    const lerp = x * (1 - a) + y * a;\r\n    return lerp;\r\n  }\r\n  public test(\r\n    progress: number,\r\n    miliseconds: boolean = false,\r\n    runAdaptative: boolean = false,\r\n    nextValue?: SimpleKeyframe\r\n  ): number | undefined {\r\n    progress = progress <= 1 ? progress : 1;\r\n    let next = nextValue ? nextValue : this.next;\r\n    if (this.adaptative && !runAdaptative) {\r\n      throw new Error(\r\n        'Adaptitive timed sequences cannot be played in first place'\r\n      );\r\n    }\r\n    if (miliseconds && !runAdaptative) progress = progress * this.duration;\r\n    else if (miliseconds)\r\n      throw new Error('miliseconds mode not allowe when adaptative');\r\n    if (next && this.current) {\r\n      while (next!.time(1) <= progress && !(next!.time(1) === 1)) {\r\n        this.nextTime(); //bug-proof\r\n        next = this.next;\r\n      }\r\n      if (isSimple(next) && isSimple(this.current)) {\r\n        progress = Math.min(\r\n          this.easing(progress),\r\n          miliseconds ? this.duration : 1\r\n        );\r\n        const a = next.time(1) - this.current.time(1);\r\n        const trace = progress / a;\r\n        const kProgress =\r\n          progress < progress - a\r\n            ? trace\r\n            : (progress - this.current.time(1)) / a;\r\n        // console.log(String([this.current.time(1), next.time(1)]));\r\n        const lerp = KeyChanger.lerp(\r\n          this.current.value,\r\n          next.value,\r\n          next.hold ? 0 : kProgress\r\n        );\r\n        // debugger;\r\n        // console.log(this.current, next);\r\n        return lerp;\r\n      } else if (isComplex(next) && isSimple(this.current)) {\r\n        // return (this.current as nestedKeyframe).obj.test(progress - this.current.time);\r\n        const nextValueFromObj = new valueKeyframe(\r\n          this.getAbsoluteStartValue(next.obj as Sequence),\r\n          next.time(1),\r\n          'ratio'\r\n        );\r\n        nextValueFromObj.duration = this.duration;\r\n        return this.test(\r\n          progress,\r\n          undefined,\r\n          undefined,\r\n          nextValueFromObj\r\n          // this.next.obj.run[0].value\r\n        );\r\n      } else if (isComplex(this.current) && isComplex(next)) {\r\n        // this.nextTime();\r\n        // debugger;\r\n        const res = this.currentAsSequence(\r\n          this.current,\r\n          progress,\r\n          this.next ? this.next.time(1) : 1\r\n        );\r\n        return res;\r\n      } else if (isComplex(this.current) && (isSimple(next) || !next)) {\r\n        // console.log(progress.toFixed(2));\r\n        return this.currentAsSequence(\r\n          this.current,\r\n          progress,\r\n          next ? next.time(1) : 1\r\n        );\r\n      }\r\n    }\r\n  }\r\n  getAbsoluteStartValue(sequence: Sequence): number {\r\n    let last = sequence.current;\r\n    while (last instanceof nestedKeyframe) {\r\n      last = sequence.current;\r\n    }\r\n    return last!.value;\r\n  }\r\n  getAbsoluteEndKeyframe(sequence: Sequence): valueKeyframe {\r\n    let last = sequence.run[sequence.run.length - 1];\r\n    while (last instanceof nestedKeyframe) {\r\n      last = sequence.run[sequence.run.length - 1];\r\n    }\r\n    return last;\r\n  }\r\n}\r\n\r\n// TODO:\r\n// 1. Nested Sequence instances DONE\r\n//    Adaptative Sequence duration DONE\r\n// P.D.: That's not the as AlgoFrame.timeline, which each timing 'sequence' has its own function rather a numeric value in a Sequence\r\n\r\nexport type normalKeyframes = valueKeyframe | nestedKeyframe;\r\nexport class Sequence extends KeyChanger<normalKeyframes> {\r\n  type: 'nested' | 'simple' = 'simple';\r\n  taken: number[] = [];\r\n  constructor(\r\n    duration: number | false,\r\n    public keyframes: (valueKeyframe | nestedKeyframe)[],\r\n    easing: Preset = 'linear',\r\n    public callback: Function | null = null\r\n  ) {\r\n    super(duration, easing);\r\n    this.init(keyframes);\r\n    // Pushes and Checks if all events are of type nestedKeyframe or _keyframe\r\n  }\r\n  protected init(keyframes: typeof this.keyframes) {\r\n    this.taken = [];\r\n    const zero = keyframes[0];\r\n    const final = keyframes[keyframes.length - 1];\r\n    zero.duration = this.duration;\r\n    final.duration = this.duration;\r\n    if (zero.time(1) > 0) {\r\n      // this.taken.push(0);\r\n      const first =\r\n        zero instanceof valueKeyframe\r\n          ? new valueKeyframe(zero.value, 0)\r\n          : new nestedKeyframe(zero.obj, 0);\r\n      first.duration = this.duration;\r\n      this.keyframes.unshift(first);\r\n      this.run.push(first);\r\n    }\r\n    if (final.time(1) < 1) {\r\n      if (final instanceof nestedKeyframe)\r\n        throw new Error(\r\n          \"Cannot set last keyframe as nested sequence, it's impossible\"\r\n        );\r\n      const last = new valueKeyframe(final.value, 1, 'ratio');\r\n      last.duration = this.duration;\r\n      this.keyframes.push(last);\r\n      this.run.push(last);\r\n    }\r\n    this.keyframes.forEach((k: any, i) => {\r\n      k.duration = this.duration;\r\n      k = k;\r\n      const timing = k.time(this.duration);\r\n      if (timing > this.duration) throw new Error('Keyframe timing overflow');\r\n      if (this.taken.includes(timing))\r\n        throw new Error('It must not have repeated times');\r\n      this.taken.push(k.time(1));\r\n      if (k instanceof nestedKeyframe) this.type = 'nested';\r\n      this.run.push(k);\r\n    });\r\n    if (!this.type) throw new Error('No events/keyframes provided');\r\n\r\n    if (this.keyframes[0] instanceof valueKeyframe) {\r\n    }\r\n    try {\r\n      this.nextTime();\r\n    } catch {\r\n      throw new Error(\r\n        'Identical time signatures on keyframes are not allowed on a single animation channel'\r\n      );\r\n    }\r\n  }\r\n  static passKeyframe(k: any | nestedKeyframe | valueKeyframe) {\r\n    if (k instanceof nestedKeyframe || k instanceof valueKeyframe) return k;\r\n    return this.is_value(k)\r\n      ? new valueKeyframe(k.value, k.timing, k.type)\r\n      : new nestedKeyframe(k.obj, k.timing, k.type);\r\n  }\r\n  static is_value(object: any): object is __valueKeyframe {\r\n    return 'val' in object;\r\n  }\r\n  public addKeyframe(\r\n    /**\r\n     * Adds a new keyframe to the entire set,\r\n     *\r\n     * @remarks\r\n     * To apply new keyframes, must do .restart() before\r\n     *\r\n     * @param keyframe - A valid AlgoFrame's keyframe object\r\n     */\r\n    keyframe:\r\n      | __valueKeyframe\r\n      | __objectKeyframe\r\n      | valueKeyframe\r\n      | nestedKeyframe\r\n  ): Sequence {\r\n    this.keyframes.push(Sequence.passKeyframe(keyframe));\r\n    const { max: duration } = timeIntervals(this.keyframes);\r\n    this.duration = duration;\r\n    return this;\r\n  }\r\n  public replaceKeyframe(\r\n    keyframe:\r\n      | __valueKeyframe\r\n      | __objectKeyframe\r\n      | valueKeyframe\r\n      | nestedKeyframe\r\n  ): Sequence {\r\n    return this;\r\n  }\r\n  protected reset(): void {\r\n    this.keyframes.forEach(k => this.run.push(k));\r\n  }\r\n  // public restart(): void in abstract parent class\r\n  clone() {\r\n    let orig = this;\r\n    return Object.assign(Object.create(Object.getPrototypeOf(orig)), orig);\r\n  }\r\n}\r\n","import { KeyChanger, Sequence } from '.';\r\n\r\nexport function timeIntervals(blocks: _keyframe[]) {\r\n  let max = 1;\r\n  let min = 0;\r\n  const intervals = blocks.map((block, i) => {\r\n    let kDuration = 0;\r\n    function tstart(block: _keyframe) {\r\n      return block.start ? block.start : 0 + block.time();\r\n    }\r\n    const time = tstart(block);\r\n    if (i < blocks.length - 1) {\r\n      kDuration = tstart(blocks[i + 1]) - time - 1;\r\n      if (kDuration < block.delay) {\r\n        throw new Error(\r\n          'Sequences/_keyframe(s) overlapping on the same channel!'\r\n        );\r\n      }\r\n    }\r\n    const end = block.start ? block.start : 0 + time + kDuration;\r\n    max = max < end ? end : max;\r\n    min = min > time ? time : min;\r\n    return [time, end];\r\n  });\r\n  return { max, min };\r\n}\r\n\r\nexport function ratioAndMilisecons(\r\n  ratio: number,\r\n  miliseconds: number,\r\n  duration: number\r\n): number {\r\n  /**\r\n   * @param ratio - The ratio of the basic measure, between 0 and 1\r\n   * @param miliseconds - Miliseconds to delay on the ratio\r\n   * @param duration - Total duration of the sequence\r\n   * @returns The arithmetic sum with all parameters in miliseconds\r\n   */\r\n  return ratio * duration + miliseconds;\r\n}\r\nexport interface BaseKeyframe {\r\n  time(duration: number): number;\r\n}\r\n\r\nexport interface ObjectKeyframe extends BaseKeyframe {\r\n  [x: string]: any;\r\n  obj: KeyChanger<any>;\r\n}\r\nexport interface SimpleKeyframe extends BaseKeyframe {\r\n  [x: string]: any;\r\n  value: number;\r\n}\r\n\r\nexport class _keyframe implements BaseKeyframe {\r\n  static instances = 0;\r\n  readonly id: number;\r\n  public duration!: number;\r\n  constructor(\r\n    public timing: number,\r\n    public type: 'ratio' | 'miliseconds' = 'ratio',\r\n    public delay: number = 0,\r\n    public hold: boolean = false,\r\n    public start: number = 0\r\n  ) {\r\n    if (start < 0) {\r\n      throw new RangeError('Negative start times are not implemented yet');\r\n    }\r\n    this.id = _keyframe.instances++;\r\n    if (this.type === 'miliseconds') {\r\n      this.duration = 0;\r\n    }\r\n  }\r\n  public time(duration: number = this.duration): number {\r\n    let timing = this.timing;\r\n    if (this.delay) {\r\n      if (typeof this.duration !== 'number')\r\n        throw new Error('Keyframe with delay has to have duration setted');\r\n      timing =\r\n        this.type === 'ratio'\r\n          ? ratioAndMilisecons(timing, this.delay!, this.duration!)\r\n          : timing + this.delay!;\r\n    }\r\n    if (typeof this.duration !== 'number')\r\n      throw new Error(\r\n        'Need to set this.duration to each keyframe in the keyframes manager'\r\n      );\r\n    return this.type === 'miliseconds'\r\n      ? timing / (this.duration === 0 ? 1 : this.duration / duration)\r\n      : duration * timing;\r\n  }\r\n}\r\n\r\nexport class valueKeyframe extends _keyframe implements SimpleKeyframe {\r\n  constructor(\r\n    public value: number,\r\n    timing: number,\r\n    type: 'ratio' | 'miliseconds' = 'miliseconds',\r\n    delay?: number,\r\n    hold: boolean = false\r\n  ) {\r\n    super(timing, type, delay, hold);\r\n  }\r\n}\r\n// unknown now but maybe a special kind of AlgoFrame + Timeline for nested sequencees! And must fit in the timeline keyframe\r\nexport class nestedKeyframe extends _keyframe implements ObjectKeyframe {\r\n  constructor(\r\n    public obj: Sequence,\r\n    timing: number,\r\n    type: 'ratio' | 'miliseconds' = 'miliseconds',\r\n    delay?: number\r\n  ) {\r\n    super(timing, type, delay);\r\n  }\r\n}\r\n\r\n// Enumerables\r\n// export type SimpleKeyframes = BaseKeyframe[];\r\n// export type ComplexKeyframes = ObjectKeyframe[];\r\n\r\nexport function isSimple(object: any): object is SimpleKeyframe {\r\n  return 'value' in object && object instanceof _keyframe;\r\n}\r\nexport function isComplex(object: any): object is ObjectKeyframe {\r\n  return 'obj' in object && object instanceof _keyframe;\r\n}\r\n\r\n// Anonymous Interfaces\r\nexport type __objectKeyframe = {\r\n  obj: Sequence;\r\n  timing: number;\r\n  type: 'ratio' | 'miliseconds';\r\n  delay?: number;\r\n  duration?: number;\r\n};\r\nexport type __valueKeyframe = {\r\n  value: number;\r\n  timing: number;\r\n  type: 'ratio' | 'miliseconds';\r\n  delay?: number;\r\n  duration?: number;\r\n};\r\n","// @ts-ignore\r\nimport * as AF from './algoframe'; // * AlgoFrame 4.4.4\r\nconst global = {\r\n  delay: 300,\r\n};\r\nimport {\r\n  _keyframe,\r\n  KeyChanger,\r\n  nestedKeyframe,\r\n  Sequence,\r\n  valueKeyframe,\r\n} from './modules/timeline';\r\nimport { ChannelBlock } from './modules/timeline/channels';\r\nconst basic = new Sequence(false, [\r\n  new valueKeyframe(2222, 0, 'ratio'),\r\n  new valueKeyframe(4444, 0.5, 'ratio'),\r\n  new valueKeyframe(6666, 1, 'ratio'),\r\n]);\r\nconst first = new Sequence(false, [\r\n  new nestedKeyframe(basic.clone(), 0, 'ratio'),\r\n  new nestedKeyframe(basic.clone(), 0.5, 'ratio'),\r\n  new nestedKeyframe(basic.clone(), 1, 'ratio'),\r\n]);\r\nconst second = new Sequence(1000, [\r\n  new nestedKeyframe(first.clone(), 0, 'ratio'),\r\n  new nestedKeyframe(first.clone(), 0.5, 'ratio'),\r\n  new nestedKeyframe(first.clone(), 1, 'ratio'),\r\n]);\r\n\r\nfunction animate() {\r\n  let number = 0;\r\n  return function startAnimation(sequence: KeyChanger<any>): void {\r\n    number++;\r\n    const animation = new AF.AlgoFrame(\r\n      sequence.duration,\r\n      global.delay,\r\n      'linear',\r\n      second\r\n    );\r\n    animation.run(\r\n      (b: number, a: number, c: { timestamp: number }) =>\r\n        console.log(b, (a * 100).toFixed(0), c.timestamp - global.delay),\r\n      'Animation ' + number\r\n    );\r\n  };\r\n}\r\nconst start = animate();\r\n// console.log(new ChannelBlock(second, 100).end());\r\nconsole.log(second.duration);\r\n\r\nconst custom = 3 || 12;\r\n\r\nfor (let i = 0; i < custom; i++) {\r\n  second.addKeyframe(\r\n    new valueKeyframe(4444, second.duration + 1, 'miliseconds', 200)\r\n  );\r\n}\r\nsecond.restart();\r\nconsole.log(second);\r\nstart(second);\r\n","class EasingFunctions {\r\n  // no easing; no acceleration\r\n  static linear: (t: number) => number = t => t;\r\n  // accelerating from zero velocity\r\n  static easeInQuad: (t: number) => number = t => t * t;\r\n  // decelerating to zero velocity\r\n  static easeOutQuad: (t: number) => number = t => t * (2 - t);\r\n  // acceleration until halfway; then deceleration\r\n  static easeInOutQuad: (t: number) => number = t =>\r\n    t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n  // accelerating from zero velocity\r\n  static easeInCubic: (t: number) => number = t => t * t * t;\r\n  // decelerating to zero velocity\r\n  static easeOutCubic: (t: number) => number = t => --t * t * t + 1;\r\n  // acceleration until halfway; then deceleration\r\n  static easeInOutCubic: (t: number) => number = t =>\r\n    t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n  // accelerating from zero velocity\r\n  static easeInQuart: (t: number) => number = t => t * t * t * t;\r\n  // decelerating to zero velocity\r\n  static easeOutQuart: (t: number) => number = t => 1 - --t * t * t * t;\r\n  // acceleration until halfway; then deceleration\r\n  static easeInOutQuart: (t: number) => number = t =>\r\n    t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\r\n  // accelerating from zero velocity\r\n  static easeInQuint: (t: number) => number = t => t * t * t * t * t;\r\n  // decelerating to zero velocity\r\n  static easeOutQuint: (t: number) => number = t => 1 + --t * t * t * t * t;\r\n  // acceleration until halfway; then deceleration\r\n  static easeInOutQuint: (t: number) => number = t =>\r\n    t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\r\n}\r\ntype Preset = string | ((x: number) => number);\r\nfunction passPreset(preset: Preset) {\r\n  if (typeof preset !== 'function') {\r\n    return EasingFunctions[\r\n      preset as keyof typeof EasingFunctions\r\n    ] as Preset as (t: number) => number;\r\n  } else {\r\n    return preset as (t: number) => number;\r\n  }\r\n}\r\nexport { EasingFunctions, Preset, passPreset };\r\n","export const EasingFunctions = {\r\n  // no easing, no acceleration\r\n  linear: (t) => t,\r\n  // accelerating from zero velocity\r\n  easeInQuad: (t) => t * t,\r\n  // decelerating to zero velocity\r\n  easeOutQuad: (t) => t * (2 - t),\r\n  // acceleration until halfway, then deceleration\r\n  easeInOutQuad: (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\r\n  // accelerating from zero velocity\r\n  easeInCubic: (t) => t * t * t,\r\n  // decelerating to zero velocity\r\n  easeOutCubic: (t) => --t * t * t + 1,\r\n  // acceleration until halfway, then deceleration\r\n  easeInOutCubic: (t) =>\r\n    t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\r\n  // accelerating from zero velocity\r\n  easeInQuart: (t) => t * t * t * t,\r\n  // decelerating to zero velocity\r\n  easeOutQuart: (t) => 1 - --t * t * t * t,\r\n  // acceleration until halfway, then deceleration\r\n  easeInOutQuart: (t) =>\r\n    t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t,\r\n  // accelerating from zero velocity\r\n  easeInQuint: (t) => t * t * t * t * t,\r\n  // decelerating to zero velocity\r\n  easeOutQuint: (t) => 1 + --t * t * t * t * t,\r\n  // acceleration until halfway, then deceleration\r\n  easeInOutQuint: (t) =>\r\n    t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t,\r\n};\r\n","import { EasingFunctions } from './utils';\r\nclass AlgoFrame {\r\n  constructor(\r\n    duration,\r\n    starttime,\r\n    easing,\r\n    keyframes,\r\n    FPS = null,\r\n    loop = false\r\n  ) {\r\n    if (typeof easing !== 'function') {\r\n      this.easing = EasingFunctions[easing];\r\n    } else {\r\n      this.easing = easing;\r\n    }\r\n    this.starttime = starttime ? starttime : 0;\r\n    this._starttime = this.starttime;\r\n    this.duration = duration;\r\n    this.startafterwait = null;\r\n    this.startanimationtime = null;\r\n    this.stop = false;\r\n    this._start = new Promise(res => (this.__start = res));\r\n    // if (!(keyframes instanceof Keyframes)) {\r\n    //   throw new Error('Invalid Keyframes Object!');\r\n    // }\r\n    this.keyframes = keyframes;\r\n    this.done = false;\r\n    this.next = undefined;\r\n\r\n    this._FPS = FPS;\r\n    this.frameDelay = 1000 / this._FPS;\r\n    this.frameRate = 0;\r\n    this.frame = -1;\r\n    this.animationFrame = -1;\r\n\r\n    this.loop = loop;\r\n  }\r\n  get FPS() {\r\n    return this._FPS ? 1000 / this._FPS : null;\r\n  }\r\n  set FPS(value) {\r\n    const FPS = parseFloat(value);\r\n    if (FPS) {\r\n      this._FPS = FPS;\r\n      this.frameDelay = 1000 / FPS;\r\n      // this.frame = -1;\r\n      // this.starttime = null;\r\n    } else throw new Error('Not a valid Number');\r\n  }\r\n  nextTime(arr = this._running) {\r\n    if (!arr.length) {\r\n      console.log(new Error());\r\n    }\r\n    return arr.reduce((previousValue, currentValue) =>\r\n      currentValue.time < previousValue.time ? currentValue : previousValue\r\n    );\r\n  }\r\n  save(callback, precision) {\r\n    this.callback = callback;\r\n    this.precision = precision;\r\n  }\r\n  restartKeyframes(t) {\r\n    this._timeline.forEach(t => {\r\n      if (t.id === this._current.id) return;\r\n      t._.keyframes.restart();\r\n      t._.keyframes.nextTime();\r\n      t.running = false;\r\n    });\r\n  }\r\n  restartTimeline() {\r\n    this._timeline.forEach(x => this._running.push(x));\r\n    this._next = this.nextTime();\r\n  }\r\n  timeline(array, real, reverseLoop) {\r\n    this._timeline = [];\r\n    this._running = [];\r\n    let data = [];\r\n    array.forEach(event => {\r\n      if (event.time >= 1 || event.time < 0 || isNaN(event.time)) {\r\n        throw new Error('Not valid');\r\n      }\r\n      data.push({\r\n        _: new AlgoFrame(\r\n          event.duration,\r\n          event.delay ? event.delay : 0,\r\n          event.easing ? event.easing : this.easing,\r\n          event.keyframes ? event.keyframes.clone() : this.keyframes.clone(),\r\n          this._FPS\r\n        ).finally(event.finally),\r\n        time: event.time,\r\n        callback: event.run,\r\n      });\r\n    });\r\n    let all = array.reduce((p, c) => {\r\n      return p + c.duration || 0 + c.delay || 0;\r\n    }, 0);\r\n    if (all / array[array.length - 1].time < array[array.length - 1].duration) {\r\n      this.duration +=\r\n        array[array.length - 1].duration - all / array[array.length - 1].time;\r\n    }\r\n    if (this.duration < all) {\r\n      this.duration = all;\r\n    }\r\n    const len = data.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const cur = this.nextTime(data);\r\n      cur.id = i + 1;\r\n      cur._.id = i + 1;\r\n      this._timeline.push(cur);\r\n      data.splice(data.indexOf(this._timeline[i]), 1);\r\n    }\r\n    this.saved_timeline = this._timeline.map(l => l.time);\r\n    this.restartTimeline();\r\n    let first = this._next;\r\n    let last = this._timeline.reduce((previousValue, currentValue) =>\r\n      currentValue.time > previousValue.time ? currentValue : previousValue\r\n    );\r\n    this.reversed = false;\r\n    this.callback = function (X, easedProgress, params) {\r\n      real(X, easedProgress, params);\r\n      const next = () => {\r\n        this._next._.startanimationtime =\r\n          params.timestamp + this._next._._starttime;\r\n        this._next._.waiting = true;\r\n\r\n        //Parent info\r\n        this._next._.time = this._next.time;\r\n\r\n        this._next._.run(this._next.callback);\r\n        this._next.running = true;\r\n        this._current = this._next;\r\n        this._running.shift();\r\n        console.log(\r\n          this._next.time,\r\n          this._running.map(l => l.time)\r\n        );\r\n        if (this._running.length) {\r\n          this._next = this.nextTime();\r\n        }\r\n      };\r\n      if (this._next) {\r\n        if (easedProgress >= this._next.time && !this._next.running) {\r\n          next();\r\n        }\r\n      } else {\r\n        console.log('REVERSED');\r\n        if (reverseLoop && !this.reversed) {\r\n          this._timeline.forEach((l, i) => {\r\n            l.time =\r\n              this.saved_timeline[this.saved_timeline.length - (i + 1)] -\r\n              this.nextTime(this.saved_timeline);\r\n          });\r\n        } else if (reverseLoop) {\r\n          this._timeline.forEach((l, i) => (l.time = this.saved_timeline[i]));\r\n        }\r\n\r\n        while (this._running.length) this._running.shift();\r\n        this.restartTimeline();\r\n        this.restartKeyframes();\r\n        if (reverseLoop && !this.reversed) this._running.reverse();\r\n        this.reversed = !this.reversed;\r\n        first = this._next;\r\n        last = this._timeline.reduce((previousValue, currentValue) =>\r\n          currentValue.time > previousValue.time ? currentValue : previousValue\r\n        );\r\n        this._running.shift();\r\n        this._next = this.nextTime();\r\n        next();\r\n      }\r\n    };\r\n    return this;\r\n  }\r\n  run(callback, precision = this._FPS) {\r\n    let condition, seg;\r\n    this.callback = callback ? callback : this.callback;\r\n\r\n    class Refresher {\r\n      constructor(precision = 1) {\r\n        this.history = new Array(precision).fill(0);\r\n        this.last = 0;\r\n        this.currenttime = 0;\r\n      }\r\n      refresh(timestamp) {\r\n        this.history.unshift(0);\r\n        this.history.pop();\r\n        this.history[0] = timestamp - this.currenttime;\r\n        this.last = this.history.includes(0)\r\n          ? 'Calculating...'\r\n          : this.history.reduce((prev, curr) => prev + curr) /\r\n            this.history.length;\r\n        this.currenttime = timestamp;\r\n      }\r\n    }\r\n\r\n    this.last = new Refresher();\r\n    if (isNaN(precision)) {\r\n      console.log(new Error(`${precision} is NaN`));\r\n      precision = this._FPS;\r\n      if (!isNaN(this.precision)) precision = this.precision;\r\n    }\r\n    this.lastFrameRate = this.lastFrameRate\r\n      ? this.lastFrameRate\r\n      : new Refresher(precision);\r\n\r\n    function animate(timestamp) {\r\n      if (this.done) {\r\n        this.frame = -1;\r\n        this.startanimationtime = timestamp;\r\n        this.done = false;\r\n        this._next = null;\r\n      }\r\n      if (this._FPS) {\r\n        seg = Math.floor((timestamp - this.starttime) / this.frameDelay);\r\n        condition = Boolean(seg > this.frame);\r\n      } else {\r\n        condition = true;\r\n      }\r\n      this.last.refresh(timestamp);\r\n      const runtime = timestamp - this.startanimationtime;\r\n      let relativeProgress = runtime / this.duration;\r\n      const easedProgress = this.easing(relativeProgress);\r\n      this.progress = easedProgress;\r\n      if (!this.startanimationtime && this.starttime === 0) {\r\n        this.startanimationtime = timestamp;\r\n      } else if (this.starttime > 0) {\r\n        this.startanimationtime = timestamp;\r\n        this.starttime =\r\n          this.starttime - this.last.last < this.last.last * 0.7\r\n            ? 0\r\n            : this.starttime - this.last.last;\r\n        requestAnimationFrame(animate.bind(this));\r\n        return;\r\n      }\r\n      let sent = false;\r\n      if (condition) {\r\n        this.frame = seg;\r\n        this.animationFrame++;\r\n        this.lastFrameRate.refresh(timestamp);\r\n        sent = true;\r\n        this.callback(\r\n          this.waiting ? 0 : this.keyframes.test(Math.min(easedProgress, 1)),\r\n          Math.min(easedProgress, 1),\r\n          {\r\n            lastFrame: this.lastFrameRate.last,\r\n            currentTime: this.lastFrameRate.currentTime,\r\n            frame: this.animationFrame,\r\n            timestamp,\r\n          }\r\n        );\r\n        this.waiting = false;\r\n      }\r\n      if (!this.stop) {\r\n        if (runtime < this.duration) {\r\n          requestAnimationFrame(animate.bind(this));\r\n        } else if (runtime + this.last.last > this.duration) {\r\n          this.animationFrame++;\r\n          // this.keyframes.nextTime();\r\n          this.callback(this.keyframes.test(1), 1, {\r\n            lastFrame: this.lastFrameRate.last,\r\n            currentTime: this.lastFrameRate.currenttime,\r\n            frame: this.animationFrame,\r\n            timestamp,\r\n          });\r\n          this.done = true;\r\n          // this.keyframes.restart();\r\n          // debugger;\r\n          if (this.loop) requestAnimationFrame(animate.bind(this));\r\n          this.next?.();\r\n        } else if (!this.done) {\r\n          this.done = true;\r\n          // this.keyframes.restart();\r\n          if (this.loop) requestAnimationFrame(animate.bind(this));\r\n          this.next?.();\r\n        }\r\n      }\r\n      if (this.animationFrame === 0) this.__start();\r\n    }\r\n    requestAnimationFrame(animate.bind(this));\r\n    return this;\r\n  }\r\n  finally(callback) {\r\n    this.next = callback;\r\n    return this;\r\n  }\r\n  break() {\r\n    this.stop = false;\r\n    return this;\r\n  }\r\n  listen(type, callback) {\r\n    switch (type) {\r\n      case 'start':\r\n        this._start.then(callback);\r\n        break;\r\n    }\r\n  }\r\n}\r\nclass Keyframes {\r\n  constructor(keyframes, easing) {\r\n    this.keyframes = [];\r\n    this.run = [];\r\n    keyframes.every((keyframe, i) => {\r\n      if (\r\n        !(keyframe instanceof Keyframes.keyframe) ||\r\n        this.keyframes.some(k => k.time === keyframe.time)\r\n      ) {\r\n        console.error(new Error(`Invalid Keyframe ${i + 1}!`));\r\n        return false;\r\n      } else {\r\n        this.keyframes.push(keyframe);\r\n        return true;\r\n      }\r\n    });\r\n    this.keyframes.forEach(k => this.run.push(k));\r\n    if (typeof easing !== 'function') {\r\n      this.easing = EasingFunctions[easing];\r\n    } else {\r\n      this.easing = easing;\r\n    }\r\n    this.nextTime();\r\n  }\r\n  nextTime() {\r\n    if (!this.run.length) {\r\n      return (this.next = null);\r\n    }\r\n\r\n    if (this.run.length > 1) {\r\n      this.current = this.run.reduce((previousValue, currentValue) =>\r\n        currentValue.time < previousValue.time ? currentValue : previousValue\r\n      );\r\n      this.next = this.run\r\n        .filter(v => v.time !== this.current.time)\r\n        .reduce((previousValue, currentValue) =>\r\n          currentValue.time < previousValue ? currentValue : previousValue\r\n        );\r\n    } else {\r\n      this.restart();\r\n      this.next = this.run.reduce((previousValue, currentValue) =>\r\n        currentValue.time < previousValue.time ? currentValue : previousValue\r\n      );\r\n    }\r\n    this.run.shift();\r\n  }\r\n  restart() {\r\n    while (this.run.length) this.run.pop();\r\n    this.keyframes.forEach(k => this.run.push(k));\r\n  }\r\n  test(progress) {\r\n    if (this.next.time <= progress) this.nextTime();\r\n    progress = Math.min(this.easing(progress), 1);\r\n    const dif = this.next.val - this.current.val;\r\n    const a = this.next.time - this.current.time;\r\n    const sum = dif * progress;\r\n    return (this.current.val + sum) / a;\r\n  }\r\n  clone() {\r\n    let orig = this;\r\n    return Object.assign(Object.create(Object.getPrototypeOf(orig)), orig);\r\n  }\r\n  static keyframe = class {\r\n    constructor(totalProgress, value) {\r\n      this.time = totalProgress;\r\n      this.val = value;\r\n    }\r\n  };\r\n}\r\n\r\n// const anim = new AlgoFrame(2500, 2000, \"easeInQuad\", 50, 150);\r\n// anim.run((x) => console.log(x));\r\n\r\nexport { AlgoFrame, Keyframes };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(503);\n"],"names":["root","factory","exports","module","define","amd","self","KeyChanger","constructor","duration","easing","next","current","adaptative","this","Math","floor","_","run","passPreset","nextTime","length","reduce","previousValue","currentValue","time","filter","v","restart","shift","pop","reset","init","currentAsSequence","object","progress","end","rProgress","res","obj","test","undefined","static","x","y","a","miliseconds","runAdaptative","nextValue","Error","isSimple","min","kProgress","lerp","value","hold","isComplex","nextValueFromObj","valueKeyframe","getAbsoluteStartValue","sequence","last","nestedKeyframe","getAbsoluteEndKeyframe","Sequence","keyframes","callback","super","type","taken","zero","final","first","unshift","push","forEach","k","i","timing","includes","is_value","addKeyframe","keyframe","passKeyframe","max","timeIntervals","replaceKeyframe","clone","Object","assign","create","getPrototypeOf","ratioAndMilisecons","ratio","blocks","map","block","kDuration","tstart","start","delay","_keyframe","RangeError","id","instances","basic","second","number","AF","AlgoFrame","b","c","console","log","toFixed","timestamp","animate","EasingFunctions","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","preset","starttime","FPS","loop","_starttime","startafterwait","startanimationtime","stop","_start","Promise","__start","done","_FPS","frameDelay","frameRate","frame","animationFrame","parseFloat","arr","_running","save","precision","restartKeyframes","_timeline","_current","running","restartTimeline","_next","timeline","array","real","reverseLoop","data","event","isNaN","finally","all","p","len","cur","splice","indexOf","saved_timeline","l","reversed","X","easedProgress","params","waiting","reverse","condition","seg","Refresher","history","Array","fill","currenttime","refresh","prev","curr","lastFrameRate","requestAnimationFrame","Boolean","runtime","relativeProgress","bind","sent","lastFrame","currentTime","break","listen","then","Keyframes","every","some","error","dif","val","sum","totalProgress","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","d","definition","key","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","r","Symbol","toStringTag"],"sourceRoot":""}